apply plugin: 'com.android.application'

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.4.0-beta5'
    }
}

repositories {
    mavenCentral()
}

android {
    lintOptions {
        lintConfig file("lint.xml")
    }

    compileSdkVersion 22
    buildToolsVersion "23.0.1"

    defaultConfig {
        versionCode 375
        versionName "4.7.22"
        minSdkVersion 15
        targetSdkVersion 22
        multiDexEnabled true
    }

    signingConfigs {
        release
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.txt'
            signingConfig signingConfigs.release
        }
    }

    if (project.hasProperty('keyAlias') &&
            project.hasProperty('storeFile') &&
            project.hasProperty('storePassword') &&
            project.hasProperty('keyPassword')) {
        android.signingConfigs.release.keyAlias = keyAlias
        android.signingConfigs.release.storeFile = file(storeFile)
        android.signingConfigs.release.storePassword = storePassword
        android.signingConfigs.release.keyPassword = keyPassword
    } else {
        buildTypes.release.signingConfig = null
    }

    productFlavors {
        generic
        googleplay {
            minSdkVersion 9
        }
    }
}

android.applicationVariants.all { variant ->
    variant.mergeResources.doLast {
        if (project.hasProperty('gapiKey')) {
            File values = file("${buildDir}/intermediates/res/merged/${variant.dirName}/values/values.xml")
            values.write(
                    values.getText('UTF-8').replaceAll(/<string name="gapi_key">.*<\/string>/, "<string name=\"gapi_key\">${project.property('gapiKey')}</string>"),
                    'UTF-8')
        }
    }
}

dependencies {
 //   compile 'com.facebook.android:facebook-android-sdk:4.7.0'
    provided 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.jakewharton:butterknife:6.0.0'
    compile 'com.android.support:design:22.2.1'
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'com.rubiconproject.oss:jchronic:0.2.6'
    compile 'org.scala-saddle:google-rfc-2445:20110304'
    compile('com.github.flavienlaurent.datetimepicker:library:0.0.2') {
        exclude group: 'com.android.support', module: 'support-v4'
    }
    googleplayCompile group: 'com.google.android.gms', name: 'play-services-location', version: '7.5.0'
    compile('com.google.apis:google-api-services-tasks:v1-rev33-1.18.0-rc') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    compile('com.google.api-client:google-api-client-android:1.18.0-rc') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    compile('com.google.http-client:google-http-client-gson:1.18.0-rc') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    compile 'com.google.guava:guava-jdk5:13.0'
    compile 'com.github.tony19:logback-android-classic:1.1.1-2'
    apk 'com.github.tony19:logback-android-core:1.1.1-2'
    androidTestCompile 'org.mockito:mockito-core:1.9.5'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.1'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.1'
    androidTestCompile 'com.natpryce:make-it-easy:3.1.0'
    compile 'com.facebook.android:facebook-android-sdk:4.7.0'
}
